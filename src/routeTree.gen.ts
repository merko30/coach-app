/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as VerifyEmailRouteImport } from './routes/verify-email'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ForgotPasswordRouteImport } from './routes/forgot-password'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CoachRegisterRouteImport } from './routes/coach/register'
import { Route as AuthenticatedSecurityRouteImport } from './routes/_authenticated/security'
import { Route as AuthenticatedProfileRouteImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedChatRouteImport } from './routes/_authenticated/Chat'
import { Route as AuthenticatedDashboardIndexRouteImport } from './routes/_authenticated/dashboard/index'
import { Route as AuthenticatedDashboardClientsRouteImport } from './routes/_authenticated/dashboard/clients'
import { Route as AuthenticatedDashboardPlansIndexRouteImport } from './routes/_authenticated/dashboard/plans/index'
import { Route as AuthenticatedDashboardPlansCreateRouteImport } from './routes/_authenticated/dashboard/plans/create'

const VerifyEmailRoute = VerifyEmailRouteImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgotPasswordRoute = ForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CoachRegisterRoute = CoachRegisterRouteImport.update({
  id: '/coach/register',
  path: '/coach/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSecurityRoute = AuthenticatedSecurityRouteImport.update({
  id: '/security',
  path: '/security',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedProfileRoute = AuthenticatedProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedChatRoute = AuthenticatedChatRouteImport.update({
  id: '/Chat',
  path: '/Chat',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexRouteImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedDashboardClientsRoute =
  AuthenticatedDashboardClientsRouteImport.update({
    id: '/dashboard/clients',
    path: '/dashboard/clients',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedDashboardPlansIndexRoute =
  AuthenticatedDashboardPlansIndexRouteImport.update({
    id: '/dashboard/plans/',
    path: '/dashboard/plans/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedDashboardPlansCreateRoute =
  AuthenticatedDashboardPlansCreateRouteImport.update({
    id: '/dashboard/plans/create',
    path: '/dashboard/plans/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/reset-password': typeof ResetPasswordRoute
  '/verify-email': typeof VerifyEmailRoute
  '/Chat': typeof AuthenticatedChatRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/security': typeof AuthenticatedSecurityRoute
  '/coach/register': typeof CoachRegisterRoute
  '/dashboard/clients': typeof AuthenticatedDashboardClientsRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/dashboard/plans/create': typeof AuthenticatedDashboardPlansCreateRoute
  '/dashboard/plans': typeof AuthenticatedDashboardPlansIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/reset-password': typeof ResetPasswordRoute
  '/verify-email': typeof VerifyEmailRoute
  '/Chat': typeof AuthenticatedChatRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/security': typeof AuthenticatedSecurityRoute
  '/coach/register': typeof CoachRegisterRoute
  '/dashboard/clients': typeof AuthenticatedDashboardClientsRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/dashboard/plans/create': typeof AuthenticatedDashboardPlansCreateRoute
  '/dashboard/plans': typeof AuthenticatedDashboardPlansIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/reset-password': typeof ResetPasswordRoute
  '/verify-email': typeof VerifyEmailRoute
  '/_authenticated/Chat': typeof AuthenticatedChatRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/security': typeof AuthenticatedSecurityRoute
  '/coach/register': typeof CoachRegisterRoute
  '/_authenticated/dashboard/clients': typeof AuthenticatedDashboardClientsRoute
  '/_authenticated/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/_authenticated/dashboard/plans/create': typeof AuthenticatedDashboardPlansCreateRoute
  '/_authenticated/dashboard/plans/': typeof AuthenticatedDashboardPlansIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/verify-email'
    | '/Chat'
    | '/profile'
    | '/security'
    | '/coach/register'
    | '/dashboard/clients'
    | '/dashboard'
    | '/dashboard/plans/create'
    | '/dashboard/plans'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/verify-email'
    | '/Chat'
    | '/profile'
    | '/security'
    | '/coach/register'
    | '/dashboard/clients'
    | '/dashboard'
    | '/dashboard/plans/create'
    | '/dashboard/plans'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/verify-email'
    | '/_authenticated/Chat'
    | '/_authenticated/profile'
    | '/_authenticated/security'
    | '/coach/register'
    | '/_authenticated/dashboard/clients'
    | '/_authenticated/dashboard/'
    | '/_authenticated/dashboard/plans/create'
    | '/_authenticated/dashboard/plans/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  VerifyEmailRoute: typeof VerifyEmailRoute
  CoachRegisterRoute: typeof CoachRegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/verify-email': {
      id: '/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof VerifyEmailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/coach/register': {
      id: '/coach/register'
      path: '/coach/register'
      fullPath: '/coach/register'
      preLoaderRoute: typeof CoachRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/security': {
      id: '/_authenticated/security'
      path: '/security'
      fullPath: '/security'
      preLoaderRoute: typeof AuthenticatedSecurityRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/Chat': {
      id: '/_authenticated/Chat'
      path: '/Chat'
      fullPath: '/Chat'
      preLoaderRoute: typeof AuthenticatedChatRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard/': {
      id: '/_authenticated/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard/clients': {
      id: '/_authenticated/dashboard/clients'
      path: '/dashboard/clients'
      fullPath: '/dashboard/clients'
      preLoaderRoute: typeof AuthenticatedDashboardClientsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard/plans/': {
      id: '/_authenticated/dashboard/plans/'
      path: '/dashboard/plans'
      fullPath: '/dashboard/plans'
      preLoaderRoute: typeof AuthenticatedDashboardPlansIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard/plans/create': {
      id: '/_authenticated/dashboard/plans/create'
      path: '/dashboard/plans/create'
      fullPath: '/dashboard/plans/create'
      preLoaderRoute: typeof AuthenticatedDashboardPlansCreateRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedChatRoute: typeof AuthenticatedChatRoute
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedSecurityRoute: typeof AuthenticatedSecurityRoute
  AuthenticatedDashboardClientsRoute: typeof AuthenticatedDashboardClientsRoute
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute
  AuthenticatedDashboardPlansCreateRoute: typeof AuthenticatedDashboardPlansCreateRoute
  AuthenticatedDashboardPlansIndexRoute: typeof AuthenticatedDashboardPlansIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedChatRoute: AuthenticatedChatRoute,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedSecurityRoute: AuthenticatedSecurityRoute,
  AuthenticatedDashboardClientsRoute: AuthenticatedDashboardClientsRoute,
  AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
  AuthenticatedDashboardPlansCreateRoute:
    AuthenticatedDashboardPlansCreateRoute,
  AuthenticatedDashboardPlansIndexRoute: AuthenticatedDashboardPlansIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  ForgotPasswordRoute: ForgotPasswordRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  VerifyEmailRoute: VerifyEmailRoute,
  CoachRegisterRoute: CoachRegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
